{"ast":null,"code":"import studentService from \"./services/studentService\";\n//import departmentService from \"./services/departmentService\";\n\nexport default {\n  data() {\n    return {\n      students: [],\n      departments: [],\n      form: {\n        id: null,\n        name: \"\",\n        birthdate: \"\",\n        department_id: \"\"\n      }\n    };\n  },\n  methods: {\n    loadStudents() {\n      studentService.getAll().then(res => {\n        this.students = res.data;\n      });\n    },\n    loadDepartments() {\n      departmentService.getAll().then(res => {\n        this.departments = res.data;\n      });\n    },\n    saveStudent() {\n      if (this.form.id) {\n        // Update\n        studentService.update(this.form.id, this.form).then(() => {\n          this.loadStudents();\n          this.resetForm();\n        });\n      } else {\n        // Create\n        studentService.create(this.form).then(() => {\n          this.loadStudents();\n          this.resetForm();\n        });\n      }\n    },\n    editStudent(student) {\n      this.form = {\n        ...student\n      };\n    },\n    deleteStudent(id) {\n      if (confirm(\"Are you sure you want to delete this student?\")) {\n        studentService.delete(id).then(() => this.loadStudents());\n      }\n    },\n    resetForm() {\n      this.form = {\n        id: null,\n        name: \"\",\n        birthdate: \"\",\n        department_id: \"\"\n      };\n    }\n  },\n  mounted() {\n    this.loadStudents();\n    this.loadDepartments();\n  }\n};","map":{"version":3,"names":["studentService","data","students","departments","form","id","name","birthdate","department_id","methods","loadStudents","getAll","then","res","loadDepartments","departmentService","saveStudent","update","resetForm","create","editStudent","student","deleteStudent","confirm","delete","mounted"],"sources":["/var/www/student-frontend-vue/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h2 class=\"text-center\">ðŸŽ“ Student Management</h2>\n\n    <!-- Add Form -->\n    <form @submit.prevent=\"saveStudent\" class=\"card p-3 shadow-sm mb-3\">\n      <div class=\"form-group mb-2\">\n        <label>Name</label>\n        <input v-model=\"form.name\" type=\"text\" class=\"form-control\" required />\n      </div>\n\n      <div class=\"form-group mb-2\">\n        <label>Birthdate</label>\n        <input v-model=\"form.birthdate\" type=\"date\" class=\"form-control\" required />\n      </div>\n\n      <div class=\"form-group mb-2\">\n        <label>Department</label>\n        <select v-model=\"form.department_id\" class=\"form-control\" required>\n          <option value=\"\">Select Department</option>\n          <option v-for=\"dept in departments\" :key=\"dept.id\" :value=\"dept.id\">\n            {{ dept.name }}\n          </option>\n        </select>\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-primary w-100 mt-2\">\n        {{ form.id ? \"Update\" : \"Add\" }} Student\n      </button>\n    </form>\n\n    <!-- Student List -->\n    <div class=\"card shadow-sm\">\n      <div class=\"card-body\">\n        <h5>Student List</h5>\n        <table class=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Name</th>\n              <th>Birthdate</th>\n              <th>Department</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(student, index) in students\" :key=\"student.id\">\n              <td>{{ index + 1 }}</td>\n              <td>{{ student.name }}</td>\n              <td>{{ student.birthdate }}</td>\n              <td>{{ student.department?.name || 'â€”' }}</td>\n              <td>\n                <button @click=\"editStudent(student)\" class=\"btn btn-sm btn-warning me-2\">\n                  Edit\n                </button>\n                <button @click=\"deleteStudent(student.id)\" class=\"btn btn-sm btn-danger\">\n                  Delete\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport studentService from \"./services/studentService\";\n//import departmentService from \"./services/departmentService\";\n\nexport default {\n  data() {\n    return {\n      students: [],\n      departments: [],\n      form: {\n        id: null,\n        name: \"\",\n        birthdate: \"\",\n        department_id: \"\",\n      },\n    };\n  },\n  methods: {\n    loadStudents() {\n      studentService.getAll().then((res) => {\n        this.students = res.data;\n      });\n    },\n    loadDepartments() {\n      departmentService.getAll().then((res) => {\n        this.departments = res.data;\n      });\n    },\n    saveStudent() {\n      if (this.form.id) {\n        // Update\n        studentService.update(this.form.id, this.form).then(() => {\n          this.loadStudents();\n          this.resetForm();\n        });\n      } else {\n        // Create\n        studentService.create(this.form).then(() => {\n          this.loadStudents();\n          this.resetForm();\n        });\n      }\n    },\n    editStudent(student) {\n      this.form = { ...student };\n    },\n    deleteStudent(id) {\n      if (confirm(\"Are you sure you want to delete this student?\")) {\n        studentService.delete(id).then(() => this.loadStudents());\n      }\n    },\n    resetForm() {\n      this.form = { id: null, name: \"\", birthdate: \"\", department_id: \"\" };\n    },\n  },\n  mounted() {\n    this.loadStudents();\n    this.loadDepartments();\n  },\n};\n</script>\n\n<style>\n.container {\n  max-width: 800px;\n  margin: 30px auto;\n}\n</style>\n"],"mappings":"AAoEA,OAAOA,cAAa,MAAO,2BAA2B;AACtD;;AAEA,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE,EAAE;MACfC,IAAI,EAAE;QACJC,EAAE,EAAE,IAAI;QACRC,IAAI,EAAE,EAAE;QACRC,SAAS,EAAE,EAAE;QACbC,aAAa,EAAE;MACjB;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACbV,cAAc,CAACW,MAAM,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;QACpC,IAAI,CAACX,QAAO,GAAIW,GAAG,CAACZ,IAAI;MAC1B,CAAC,CAAC;IACJ,CAAC;IACDa,eAAeA,CAAA,EAAG;MAChBC,iBAAiB,CAACJ,MAAM,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;QACvC,IAAI,CAACV,WAAU,GAAIU,GAAG,CAACZ,IAAI;MAC7B,CAAC,CAAC;IACJ,CAAC;IACDe,WAAWA,CAAA,EAAG;MACZ,IAAI,IAAI,CAACZ,IAAI,CAACC,EAAE,EAAE;QAChB;QACAL,cAAc,CAACiB,MAAM,CAAC,IAAI,CAACb,IAAI,CAACC,EAAE,EAAE,IAAI,CAACD,IAAI,CAAC,CAACQ,IAAI,CAAC,MAAM;UACxD,IAAI,CAACF,YAAY,CAAC,CAAC;UACnB,IAAI,CAACQ,SAAS,CAAC,CAAC;QAClB,CAAC,CAAC;MACJ,OAAO;QACL;QACAlB,cAAc,CAACmB,MAAM,CAAC,IAAI,CAACf,IAAI,CAAC,CAACQ,IAAI,CAAC,MAAM;UAC1C,IAAI,CAACF,YAAY,CAAC,CAAC;UACnB,IAAI,CAACQ,SAAS,CAAC,CAAC;QAClB,CAAC,CAAC;MACJ;IACF,CAAC;IACDE,WAAWA,CAACC,OAAO,EAAE;MACnB,IAAI,CAACjB,IAAG,GAAI;QAAE,GAAGiB;MAAQ,CAAC;IAC5B,CAAC;IACDC,aAAaA,CAACjB,EAAE,EAAE;MAChB,IAAIkB,OAAO,CAAC,+CAA+C,CAAC,EAAE;QAC5DvB,cAAc,CAACwB,MAAM,CAACnB,EAAE,CAAC,CAACO,IAAI,CAAC,MAAM,IAAI,CAACF,YAAY,CAAC,CAAC,CAAC;MAC3D;IACF,CAAC;IACDQ,SAASA,CAAA,EAAG;MACV,IAAI,CAACd,IAAG,GAAI;QAAEC,EAAE,EAAE,IAAI;QAAEC,IAAI,EAAE,EAAE;QAAEC,SAAS,EAAE,EAAE;QAAEC,aAAa,EAAE;MAAG,CAAC;IACtE;EACF,CAAC;EACDiB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACf,YAAY,CAAC,CAAC;IACnB,IAAI,CAACI,eAAe,CAAC,CAAC;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}